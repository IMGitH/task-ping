name: Watch Annotation Tasks

on:
  schedule:
    - cron: '*/15 4-18 * * *'  # Every 15 min from 07:00–21:00 Israel time (UTC+3) 
    # Israel is UTC+3 during daylight saving (spring–autumn)
    # So 08:00–21:00 Israel time = 05:00–18:00 UTC
  workflow_dispatch:
    inputs:
      mode:
        description: "Select task watcher mode"
        required: true
        default: "Check for tasks updates"
        type: choice
        options:
          - "Check for tasks updates"
          - "Send current task list"
          - "Run both"
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

jobs:
  run-watcher:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache task cache
        uses: actions/cache@v4
        with:
          path: task_cache.json
          key: tasks-cache

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run watcher
        env:
          TWILIO_SID: ${{ secrets.TWILIO_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM: ${{ secrets.TWILIO_FROM }}
          TWILIO_TO: ${{ secrets.TWILIO_TO }}
          SESSION_COOKIE: ${{ secrets.SESSION_COOKIE }}
          ANNOTATION_URL: ${{ secrets.ANNOTATION_URL }}
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "Running mode 1 (cron)"
            python watcher.py 1
          else
            echo "Dispatch mode: ${{ inputs.mode }}"
            case "${{ inputs.mode }}" in
              "Check for tasks updates") mode=1 ;;
              "Send current task list") mode=2 ;;
              "Run both") mode=both ;;
              *) echo "❌ Unknown mode" && exit 1 ;;
            esac

            if [ "$mode" = "both" ]; then
              python watcher.py 1
              python watcher.py 2
            else
              python watcher.py $mode
            fi
          fi
